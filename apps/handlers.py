from aiogram.filters import CommandStart
from aiogram.types import CallbackQuery
from aiogram.types import FSInputFile
from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from apps.lists import pko_list
from apps.lists import KM3_list
from contextlib import suppress
from aiogram.exceptions import TelegramBadRequest
from apps.lists import delete_list


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
import keyboards.user_keyboard as kb

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∞
import keyboards.admin_keyboard as ak
from filters.is_admin import IsAdmin

admins_id = [804555908,856935419]
router = Router()

# –°—Ç–∞—Ä—Ç –±–æ—Ç–∞

# 1. –ê–¥–º–∏–Ω
@router.message(CommandStart(),IsAdmin(admins_id))
async def start_command(message: Message):
        await message.answer_photo(
            photo="https://avatars.dzeninfra.ru/get-zen_doc/34175/pub_5cea2361585c2f00b5c9cb0b_5cea310a752e5b00b25b9c01/scale_1200",
            reply_markup=kb.ReplyKeyboardDocs)
        await message.answer(
            text=f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name} , –∫–∞–∫ —Ç—ã —É–∂–µ –Ω–∞–≤–µ—Ä–Ω–æ–µ –ø–æ–Ω—è–ª(a), —ç—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–º–æ—â–∏ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Å—Å–æ–≤—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤! –ï—Å–ª–∏ –±—É–¥–µ—Ç –∂–µ–ª–∞–Ω–∏–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å gift –ø—Ä–æ–¥—É–∫—Ü–∏–π, –º–æ–∂–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ –≤ –±–æ—Ç–∞ –Ω–∏–∂–µ)",
            reply_markup=ak.adminKeyboard)
        await message.answer(text="–£ –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")

# 2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
@router.message(CommandStart())
async def start_command(message: Message):
        await message.answer_photo(
            photo="https://avatars.dzeninfra.ru/get-zen_doc/34175/pub_5cea2361585c2f00b5c9cb0b_5cea310a752e5b00b25b9c01/scale_1200",reply_markup=kb.ReplyKeyboardDocs)
        await message.answer(
            text=f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name} , –∫–∞–∫ —Ç—ã —É–∂–µ –Ω–∞–≤–µ—Ä–Ω–æ–µ –ø–æ–Ω—è–ª(a), —ç—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–º–æ—â–∏ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Å—Å–æ–≤—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤! –ï—Å–ª–∏ –±—É–¥–µ—Ç –∂–µ–ª–∞–Ω–∏–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å gift –ø—Ä–æ–¥—É–∫—Ü–∏–π, –º–æ–∂–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ –≤ –±–æ—Ç–∞ –Ω–∏–∂–µ)",
            reply_markup=kb.Start)

# –ì–ª–∞–≤–Ω–∞—è
@router.message(F.text == "–ì–ª–∞–≤–Ω–∞—è")
async def main(message: Message):
    await message.answer(
        text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é.")
    await message.answer_photo(
        photo="https://avatars.dzeninfra.ru/get-zen_doc/34175/pub_5cea2361585c2f00b5c9cb0b_5cea310a752e5b00b25b9c01/scale_1200",reply_markup=kb.Start)

#userId
@router.message(F.text == "id")
async def id(message: Message):
    await message.answer(f'{message.from_user.id}')

# –ú–µ–Ω—é

# 1. –ê–¥–º–∏–Ω
@router.message(F.text == "–ú–µ–Ω—é",IsAdmin(admins_id))
async def menu(message: Message):
    await message.answer(text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é!', reply_markup=ak.adminKeyboard)

# 2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
@router.message(F.text == "–ú–µ–Ω—é")
async def menu(message: Message):
    await message.answer(text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é!', reply_markup=kb.ReplyKeyboardDocs)

# –ö–∞—Å—Å–æ–≤–∞—è –∫–Ω–∏–≥–∞
@router.message(F.text == "üìñ –ö–∞—Å—Å–æ–≤–∞—è –∫–Ω–∏–≥–∞")
async def kk(message: Message):
    await message.answer(text='–ö–∞—Å—Å–æ–≤–∞—è –∫–Ω–∏–≥–∞ - —É—á—ë—Ç–Ω—ã–π —Ä–µ–≥–∏—Å—Ç—Ä, –≤ –∫–æ—Ç–æ—Ä–æ–º –æ—Ç—Ä–∞–∂–∞—é—Ç—Å—è –≤ —Ö—Ä–æ–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–º –ø–æ—Ä—è–¥–∫–µ –≤—Å–µ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π –∫–∞—Å—Å–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏.')
    await message.answer_photo(photo='https://ae04.alicdn.com/kf/A01a62fb3117944e39ae9f5ce4b50c130D.png',
                               reply_markup=kb.ReplyInsideButtons)

# –í–æ–∑–≤—Ä–∞—Ç—ã
@router.message(F.text == "‚ôª –í–æ–∑–≤—Ä–∞—Ç—ã")
async def returns(message: Message):
    await message.answer(text='–í–æ–∑–≤—Ä–∞—Ç—ã',reply_markup=kb.ReturnsButtons)

# –ö–ú6
@router.message(F.text == "üìÑ –ö–ú6")
async def km6(message: Message):
    await message.answer(text='–ö–ú6 - –û—Ç—á–µ—Ç –∫–∞—Å—Å–∏—Ä–∞ –∑–∞ —Å–º–µ–Ω—É.',reply_markup=kb.ReplyInsideButtons)


#–ö–ú3 /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
@router.callback_query(kb.Pagination.filter(F.action.in_(["next1"])))
async def pagination_handler(call: CallbackQuery, callback_data: kb.Pagination):
    page_num = int(callback_data.page)
    page = page_num + 1
    if page_num < (len(KM3_list) - 1):
        with suppress(TelegramBadRequest):
            image = FSInputFile(KM3_list[page][0], filename="image")
            await call.message.answer_photo(photo=image)
            await call.message.answer(
                text=f"{KM3_list[page][1]}", reply_markup=kb.Km3Paginator(page))
        await call.answer()
    else:
        await call.message.answer("–í—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏ –æ–±—É—á–µ–Ω–∏–µ!",reply_markup=kb.ReplyKeyboardDocs)
@router.message(F.text == "üìÑ –ö–ú3")
async def km3(message: Message):
    await message.answer(text='–ö–ú3 - –ê–∫—Ç –æ –≤–æ–∑–≤—Ä–∞—Ç–µ –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—É–º–º –ø–æ–∫—É–ø–∞—Ç–µ–ª—è–º (–∫–ª–∏–µ–Ω—Ç–∞–º) –ø–æ –Ω–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã–º –∫–∞—Å—Å–æ–≤—ã–º —á–µ–∫–∞–º',reply_markup=kb.ReplyInsideButtons)
    image = FSInputFile(KM3_list[0][0])
    await message.answer_photo(photo=image)
    await message.answer(f"{KM3_list[0][1]}", reply_markup=kb.Km3Paginator())

# –†–ö–û ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
@router.callback_query(kb.Pagination.filter(F.action.in_(["next"])))
async def pagination_handler(call: CallbackQuery, callback_data: kb.Pagination):
    page_num = int(callback_data.page)
    page = page_num + 1
    if page_num < (len(pko_list) - 1):
        with suppress(TelegramBadRequest):
            image = FSInputFile(pko_list[page][0], filename="image")
            await call.message.answer_photo(photo=image)
            await call.message.answer(
                text=f"{pko_list[page][1]}", reply_markup=kb.PkoPaginator(page))
        await call.answer()
    else:
        await call.message.answer("–í—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏ –æ–±—É—á–µ–Ω–∏–µ!", reply_markup=kb.ReplyKeyboardDocs)

@router.message(F.text == "üìù –†–ö–û")
async def rko(message: Message):
    await message.answer(text='–†–ö–û - –†–∞—Å—Ö–æ–¥–Ω—ã–π –∫–∞—Å—Å–æ–≤—ã–π –æ—Ä–¥–µ—Ä, –≤—ã–¥–∞—á–∞ —Ä–∞–∑–º–µ–Ω–∞ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Å–º–µ–Ω—ã.',
                         reply_markup=kb.ReplyInsideButtons)
    image = FSInputFile(pko_list[0][0])
    await message.answer_photo(photo=image)
    await message.answer(f"{pko_list[0][1]}", reply_markup=kb.PkoPaginator())


# –ü–ö–û /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
@router.message(F.text == "üìù –ü–ö–û")
async def pko(message: Message):
    await message.answer(text='–ü–ö–û - –ü—Ä–∏—Ö–æ–¥–Ω—ã–π –∫–∞—Å—Å–æ–≤—ã–π –æ—Ä–¥–µ—Ä, –≤–æ–∑–≤—Ä–∞—Ç —Ä–∞–∑–º–µ–Ω–∞ + –≤—ã—Ä—É—á–∫–∏ –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã.',reply_markup=kb.ReplyInsideButtons)

# –ü–î–ö
@router.message(F.text == "üí≥ –ü–î–ö")
async def pdk(message: Message):
    await message.answer(text='–ü–î–ö - –ü–æ–¥–∞—Ä–æ—á–Ω–∞—è –∫–∞—Ä—Ç–∞',reply_markup=kb.GiftCardButtons)

# –î–æ–∫—É–º–µ–Ω—Ç—ã
@router.callback_query(F.data == 'docs')
async def docs(callback: CallbackQuery):
    await callback.answer('')
    await callback.message.answer(text='–ß—Ç–æ –±—É–¥–µ–º —Å–º–æ—Ç—Ä–µ—Ç—å?)',reply_markup=kb.ReplyKeyboardDocs)



# –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
@router.message(F.text == "Admin-panel",IsAdmin(admins_id))
async def adminPanel(message: Message):
    await message.answer(text='–í—ã –∑–∞—à–ª–∏ –≤ –ø–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∞',reply_markup=ak.adminPanel)

# –õ—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

# 1. –ê–¥–º–∏–Ω
@router.message(IsAdmin(admins_id))
async def anyMess(message: Message):
    await message.answer(
        text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é.")
    await message.answer(text='–ß—Ç–æ –±—É–¥–µ–º —Å–º–æ—Ç—Ä–µ—Ç—å?)',reply_markup=ak.adminKeyboard)

# 2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª
@router.message()
async def anyMess(message: Message):
    await message.answer(
        text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é.")
    await message.answer(text='–ß—Ç–æ –±—É–¥–µ–º —Å–º–æ—Ç—Ä–µ—Ç—å?)',reply_markup=kb.ReplyKeyboardDocs)
